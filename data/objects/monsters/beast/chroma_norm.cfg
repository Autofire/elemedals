# Chromalisk
# Enemy that roams around, and attacks the player if spotted.
# Can jump. Can attack while jumping. Can cloak.
// TODO: Fix jumping

{
#------GLOBAL VALUES------#
id: "chroma_norm",
prototype: ["hittable"],
solid_dimensions: ["common","~enemy", "~hazard"],
collide_dimensions: ["common", "enemy", "~hazard"],
editor_info: { category: "Monsters, Beasts" },
friction: 2000,
hitpoints: 20,
max_hitpoints: 20,
mass: 5,
traction: 1000,
traction_in_air: 1000,
zorder: 5,

#------PROPERTIES------#
properties: {
	c_standDuration: "int :: 30",
	c_walkVelocityX: "int :: 200",
	
	c_jumpVelocityX: "int :: 500",
	c_jumpVelocityY: "int :: -2100",
	c_dodgeVelocityX: "int :: (-700 - 1d100) * facing",	// Jumps backwards
	c_dodgeVelocityY: "int :: -500",
	
	c_playerLaunchVelocityY: "int :: -1000",
	c_attackCoolDown: "int :: 150",
	c_invisAlpha:     "int :: 255",

	c_IgnoreMissingTimers: "false",	// Overloaded from standard_values

	cTEAM: "'evil'",
	cIS_BOUNCY: "true",
	cATTACK_DAMAGE: "if(animation = 'attack', 2, 1)",

	distance_to_cliff_check: "max(30, (velocity_x*facing)/6)",
		
	should_turn_away_from_cliff: "(distance_to_cliff < distance_to_cliff_check)",
	
	player_noticeable: "bool ::
	   (player_in_visible_pos
	   	and
		abs(level.player.midpoint_x - self.midpoint_x) <
		if(self.facing = desired_facing,
			front_detection_area,
			rear_detection_area)
	   )
	",
	
	player_in_target_area:  "if(player_noticeable and self.facing = desired_facing, 1, 0)",
	desired_facing: "int :: if(level.player.midpoint_x < self.midpoint_x, -1, 1)",
	rear_detection_area: "if(higher_difficulty, 1200, 400)",
	front_detection_area: "if(higher_difficulty, 1200, 500)",
	player_in_attack_range: "(abs(level.player.midpoint_x - midpoint_x) < 120)",
	player_in_decent_y_pos: "(level.player.midpoint_y > self.y and level.player.midpoint_y - 16 < self.y2)",
	player_in_visible_pos: "(
		(level.player.midpoint_y + 96 > self.y or level.player.midpoint_y - 96 < self.y2)
			and
		(abs(level.player.midpoint_x - midpoint_x) < 180)
	)",
	
	cliff_check: "commands :: if((should_turn_away_from_cliff), animation('turn'))",
	
	
	#--AI VS. PLAYER--#
	choose_action: "commands :: if(player_noticeable, strife, cliff_check)",
	strife: "commands :: if(facing = desired_facing,
			if(player_in_attack_range and player_in_decent_y_pos, try_attack),
			animation('turn'))",
	try_attack: "commands :: 
		if(Timer_HasExpired('attack_cooldown'),
			animation('pre_attack1'),
			animation('dodge')
		)
	",
},

#------ANIMATION HANDLERS------#
on_create: "[
	animation('stand'),
	Timer_Start('stand_timer', c_standDuration),
	Timer_Start('attack_cooldown', c_attackCoolDown)
]",

on_enter_stand_anim: "Timer_Start('stand_timer', c_standDuration)",
on_process_stand: "
	if(Timer_HasExpired('stand_timer'),
		animation('walk'),
	   player_noticeable,
	    set(alpha, c_invisAlpha)
	)
",
on_leave_stand_anim: "set(alpha, 255)",

on_process_walk: "[
	set(velocity_x, facing*c_walkVelocityX),
	choose_action
]",
on_end_walk_anim: "animation('walk')",

on_process_turn: "[
	if(time_in_animation = 6,
		set(facing, -facing)
	)
]",
on_end_turn_anim: "animation('stand')",

on_end_pre_jump_anim: "[
	animation('jump'),
	set(velocity_x, facing*c_jumpVelocityX),
	set(velocity_y, -c_jumpVelocityY)
]",

on_process: "[
	fire_event('bookkeep')
]",


#--COLLISION HANDLING--#
on_collide_side: "[
	if(animation = 'walk' and player_noticeable,
		animation('pre_jump'),
	    if(animation != 'turn',
	    	animation('turn')
	    )
	),
	
	set(velocity_x, 0) // This keeps it from getting stuck.
]",

on_collide_feet: "
	if(animation = 'jump',
		animation('stand')
	)
",

on_jumped_on: "
	if(arg.jumped_on_by = level.player and animation != 'attack',
		set(me.animation, 'dodge')
	)
",


#--ATTACKING--#
on_process_pre_attack1: "
	if(time_in_animation = 13,
		[set(velocity_y, -500), set(velocity_x, -200*facing)]
	)
",
on_end_pre_attack1_anim: "animation('pre_attack2')",
on_end_pre_attack2_anim: "animation('attack')",
on_end_attack_anim: "animation('recover')",
on_end_recover_anim: "[
	animation('stand'),
	Timer_Start('attack_cooldown', c_attackCoolDown)
]",


#--DODGING--#
on_process_dodge: "
	if(time_in_animation = 13,
		[set(velocity_x, c_dodgeVelocityX),
		 set(velocity_y, c_dodgeVelocityY)
		]
	)
",

on_end_dodge_anim: "animation('stand')",

#------ANIMATIONS------#
animation: [
	#--NORMAL--#
	{
		id: "stand",
		body_area: "all",
		image: "monsters/beast/chroma_norm.png",
		rect: [2,2,33,28],
		solid_area: [5,8,27,25],
		frames: 1,
		duration: 1,
		accel_x: 0,
		accel_y: 100
	},
	{
		id: "walk",
		body_area: "all",
		image: "monsters/beast/chroma_norm.png",
		rect: [2,33,33,59],
		solid_area: [5,8,27,25],
		pad: 3,
		frames: 4,
		duration: 6,
		frames_per_row: 4,
		accel_x: 0,
		accel_y: 100
	},
	{
		id: "turn",
		body_area: "all",
		image: "monsters/beast/chroma_norm.png",
		rect: [2,64,33,90],
		solid_area: [5,8,27,25],
		frames: 1,
		duration: 14,
		accel_x: 0,
		accel_y: 100
	},
	
	{
		id: "pre_jump",
		body_area: "all",
		image: "monsters/beast/chroma_norm.png",
		rect: [44,2,75,28],
		solid_area: [5,8,27,25],
		frames: 1,
		duration: 14,
		accel_x: 0,
		accel_y: 100
	},
	{
		id: "jump",
		body_area: "all",
		image: "monsters/beast/chroma_norm.png",
		rect: [79,2,110,28],
		solid_area: [5,6,27,23],
		frames: 1,
		duration: 14,
		accel_x: 0,
		accel_y: 100
	},
	
	#--ATTACKS--#
	{
		id: "pre_attack1",
		body_area: "all",
		image: "monsters/beast/chroma_norm.png",
		rect: [44,2,75,28],
		solid_area: [5,8,27,25],
		pad: 3,
		frames: 2,
		duration: 13,
		accel_x: 0,
		accel_y: 100
	},
	{
		id: "pre_attack2",
		body_area: "all",
		image: "monsters/beast/chroma_norm.png",
		rect: [114,2,145,28],
		solid_area: [5,8,27,25],
		frames: 1,
		duration: 30,
		accel_x: 0,
		accel_y: 100
	},
	{
		id: "attack",
		image: "monsters/beast/chroma_norm.png",
		rect: [149,2,230,28],
		solid_area: [5,8,27,25],
		body_area: [5,8,27,25],
		attack_area: [24,13,80,17],
		pad: 3,
		frames: 4,
		frames_per_row: 1,
		duration: 4,
		accel_x: 0,
		accel_y: 100
	},
	{
		id: "recover",
		body_area: "all",
		image: "monsters/beast/chroma_norm.png",
		rect: [114,2,145,28],
		solid_area: [5,8,27,25],
		pad: 3,
		frames: 1,
		frames_per_row: 1,
		duration: 15,
		accel_x: 0,
		accel_y: 100
	},
	
	{
		id: "dodge",
		body_area: "all",
		image: "monsters/beast/chroma_norm.png",
		rect: [44,2,75,28],
		solid_area: [5,8,27,25],
		pad: 3,
		frames: 2,
		duration: 13,
		accel_x: 0,
		accel_y: 100
	}
],
}
