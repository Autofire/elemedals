# Gunpuppy
# Simple turret enemy
# TODO: (This only includes things which may not be obvious)
#	Make it fling the player off if it's stood on for too long
#    Make its three-way shot cost energy

{
#GLOBAL VALUES#

id: "gunpup_norm",
prototype: ["hittable"],
editor_info: { category: "Monsters, Construct" },
solid_dimensions: ["common","enemy"],
hitpoints: 25,
max_hitpoints: 25,
always_active: true,

properties: {
	cBULK: 0,
	cHURT_VELOCITY_X: 0,
	cHURT_VELOCITY_Y: 0,

	// ATTACK STUFF //
	// For attack countdown, see the 'fire' animation
	c_attackCoolDown: "int :: 100",
	c_attackVelocity: "int :: 500",
	c_sideShotAngle:  "decimal :: 15.0",
	
	
	// AI //
	c_frontDetectionArea: "int :: if(higher_difficulty, 1000, 600)",
	c_rearDetectionArea:  "int :: if(higher_difficulty, 500, 50)",
	
	ChoseAction: "def() -> commands
		if(c_playerNoticeable,
			if(facing != c_desiredFacing,
	    		animation('turn'),
	    		if(Timer_HasExpired('attack_cooldown'),
	    			animation('open'),
	    			animation('stand'),
	    		)
			),
			animation('stand')
		)
	",

	c_desiredFacing: "int :: if(level.player.midpoint_x < self.midpoint_x, -1, 1)",
	
	c_playerNoticeable: "bool :: 
		bool(c_playerInDecentYPos and 
		     abs(level.player.midpoint_x - self.midpoint_x) < t_detectionArea)
		   where t_detectionArea =
		   	if(self.facing = c_desiredFacing,
		   		c_frontDetectionArea,
		   		c_rearDetectionArea)",
	
	c_playerXdist: "int :: abs(level.player.mid_x - self.mid_x)",
	
	c_playerInDecentYPos: "bool ::
		(level.player.midpoint_y > self.y-c_playerXdist
			and
		 level.player.midpoint_y < self.y2
			and
		 abs(slope_standing_on) < 1)
	",
	
	// Overload from hittable.cfg
	handle_special_damage_response: "
		def(obj hittable|null collide_with) -> commands
			if(animation = 'stand' and facing != c_desiredFacing, 
				animation('turn')
			)
	",
	
}, // End of properties

on_create: "Timer_Start('attack_cooldown', c_attackCoolDown)",

#ANIMATION HANDLES#
on_end_stand_anim: "ChoseAction()",
on_end_direction_check_anim: "
	if(facing != c_desiredFacing,
	    animation('turn'),
	    animation('open')
	)
",

on_process_turn: "if(time_in_animation = 8, set(facing, c_desiredFacing))",

on_end_turn_anim: "ChoseAction()",
on_end_open_anim: "animation('fire')",
on_end_fire_anim: "animation('close')",
on_end_close_anim: "ChoseAction()",

on_shoot: "[
	map([-c_sideShotAngle, 0, c_sideShotAngle], 'theta',
		spawn('gunpup_norm.gunpup_bullet',
			  midpoint_x + facing * 5,
			  midpoint_y - 13,
			  facing,
			  [set(child.velocity_x, c_attackVelocity * cos(theta) * facing),
			   set(child.velocity_y, c_attackVelocity * sin(theta))
			  ]
		)
	),
	
	sound_falloff('monsters/gunpup_bark' + 1d3 + '.wav', 200, 0.5),
	Timer_Start('attack_cooldown', c_attackCoolDown)
]",

#ANIMATIONS#
animation: [
	{
		"@base": true,
		
		image: "monsters/construct/gunpup_norm.png",
		body_area: "all",
		pad: 4,
		
		accel_x: 0,
		accel_y: 200
	},

	{
		id: "stand",
		rect: [5,7,28,33],
		solid_area: [5,3,18,25],
		frames: 3,
		frames_per_row: 3,
	},
	{
	# This animation is ran right after noticing the player. It triggers 'turn'
		id: "direction_check",
		rect: [5,7,28,33],
		solid_area: [5,3,18,25],
		frames: 3,
		frames_per_row: 3,
	},
	{
		id: "turn",
		rect: [5,7,28,33],
		solid_area: [5,3,18,25],
		frames: 3,
		frames_per_row: 3,
		duration: 3,
		reverse: true,
	},
	{
		id: "open",
		rect: [5,42,28,72],
		solid_area: [4,5,17,29],
		frames: 3,
		frames_per_row: 3,
		duration: 4,
	},
	{
		id: "fire",
		events: "30:shoot",
		rect: [5,77,28,107],
		solid_area: [4,5,17,29],
		frames: 1,
		frames_per_row: 3,
		duration: 50,
	},
	{
		id: "close",
		rect: [5,112,28,142],
		solid_area: [4,5,17,29],
		frames: 3,
		frames_per_row: 3,
		duration: 4,
	},
	{
		id: "shake",
		rect: [5,7,26,37],
		solid_area: [3,5,16,29],
		frames: 2,
		frames_per_row: 2,
	}
],

# Bullets and effects
object_type: [
		{
		id: "gunpup_bullet",
		dies_on_inactive: true,
		timer_frequency: 450,
		object_level_collisions: true,
		solid_dimensions: ["player"],
		prototype: ["shot"],
		properties: {
		#	attack_damage: "if(level.player.difficulty <= level.player.difficulty_casual,1,2)",
			attack_damage: "1",
			cELEMENTAL_DAMAGE: "20",
		},
		
		on_end_normal_anim: "animation('normal')",
		on_process: "if((time_in_animation%7) = 0, spawn('gunpup_norm.gunpup_bullet_trail',midpoint_x,midpoint_y,{velocity_x:0,velocity_y:0}))",
		on_end_flash_anim: "die()",
		on_timer: "die()",
		
		animation: 
			{
				id: "normal",
				image: "monsters/construct/gunpup_norm.png",
				attack_area: [0,0,11,11],
				pad: 3,
				rect: [6,148,22,164],
				frames: 5,
				frames_per_row: 2,
				duration: 4
			},
		},
			
		{
		id: "gunpup_bullet_trail",
		ignore_collide: true,
		on_end_normal_anim: "die()",
		zorder: 50,
		dies_on_inactive: true,
		on_spawned: "animation('normal')",
		
		animation: 
			{
				id: "normal",
				image: "monsters/construct/gunpup_norm.png",
				pad: 3,
				rect: [6, 208, 10, 212],
				frames: 5,
				frames_per_row: 5,
				duration: 4,
				x_accel: 0,
				y_accel: 0
			},
		}
],

}
