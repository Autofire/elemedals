# Chromalisk
# Enemy that roams around, and attacks the player if spotted.
# Can jump. Can attack while jumping. Can cloak.

{
#------GLOBAL VALUES------#
id: "chroma_norm",
prototype: ["hittable"],
solid_dimensions: ["common","~enemy", "~hazard"],
collide_dimensions: ["common", "enemy", "~hazard"],
editor_info: { category: "Monsters, Beasts" },
friction: 2000,
hitpoints: 200,
max_hitpoints: 200,
mass: 5,
traction: 1000,
traction_in_air: 1000,
zorder: 5,

#------PROPERTIES------#
properties: {
	team: "'evil'",
	stand_ticks: { type: "int", default: 2 },
	attack_CD: { type: "int", default: 75 },
	attack_damage: "if(animation = 'attack', 2, 1)",

	distance_to_cliff_check: "max(30, (velocity_x*facing)/6)",
		
	should_turn_away_from_cliff: "if(upside_down = -1,
			(distance_to_cliff < distance_to_cliff_check),
			if((not solid(level, midpoint_x + 30*facing, midpoint_y -20, 2, 1)) or solid(level, midpoint_x + 30*facing, midpoint_y -10, 5, 1), 1)
	)",
	
	player_noticeable: "bool :: (player_in_visible_pos and abs(level.player.midpoint_x - self.midpoint_x) < if(self.facing = desired_facing, front_detection_area, rear_detection_area))",
	player_in_target_area:  "if(player_noticeable and self.facing = desired_facing, 1, 0)",
	desired_facing: "int :: if(level.player.midpoint_x < self.midpoint_x, -1, 1)",
	rear_detection_area: "if(higher_difficulty, 1200, 400)",
	front_detection_area: "if(higher_difficulty, 1200, 500)",
	player_in_attack_range: "(abs(level.player.midpoint_x - midpoint_x) < 120)",
	player_in_decent_y_pos: "(level.player.midpoint_y > self.y and level.player.midpoint_y - 16 < self.y2)",
	player_in_visible_pos: "((level.player.midpoint_y + 96 > self.y or level.player.midpoint_y - 96 < self.y2) and (abs(level.player.midpoint_x - midpoint_x) < 180))",
	
	turn_around_check: "commands :: if((should_turn_away_from_cliff), animation('turn'))",
	
	
	#--AI VS. PLAYER--#
	choose_action: "commands :: if(player_noticeable, strife, turn_around_check)",
	strife: "commands :: if(facing = desired_facing,
			if(player_in_attack_range and player_in_decent_y_pos, try_attack),
			animation('turn'))",
	try_attack: "commands :: if(attack_CD = 0,
			animation('pre_attack1'),
			animation('dodge'))",
	dodge_force: "int :: if(abs(level.player.midpoint_x - midpoint_x) < 65,
			-300*facing,
			300 * if(1d2 = 2, 1, -1))",
},

#------ANIMATION HANDLES------#
on_create: "animation('stand')",
on_collide_feet: "if(animation = 'jump', animation('stand'))",
on_process: "[
			if(attack_CD > 0, add(attack_CD, -1)),
			]",

on_end_stand_anim: "if(stand_ticks != 0,
						[animation('stand'), add(stand_ticks, -1)],
						animation('walk'),
						)",
on_end_walk_anim: "animation('walk')",
on_process_walk: "[set(velocity_x, facing*200), choose_action]",
on_collide_side: "if(animation = 'walk',
					[if(player_noticeable,
						animation('pre_jump'),
						animation('turn')),
					set(stand_ticks, 2 + 1d3)])",

on_process_turn: "if(time_in_animation = 6, set(facing, -facing))",
on_end_turn_anim: "animation('stand')",
on_end_pre_jump_anim: "[animation('jump'), set(velocity_y, -2100), set(velocity_x, facing*500)]",

#--ATTACKING--#
on_process_pre_attack1: "if(time_in_animation = 13,
							[set(velocity_y, -500), set(velocity_x, -200*facing)]
							)",
on_end_pre_attack1_anim: "animation('pre_attack2')",
on_end_pre_attack2_anim: "animation('attack')",
on_end_attack_anim: "animation('recover')",
on_end_recover_anim: "[animation('stand'), set(stand_ticks, 5 + 1d3), set(attack_CD, 150 + 1d125)]",

on_process_dodge: "if(time_in_animation = 13,
			[set(velocity_y, -500), set(velocity_x, dodge_force)]
			)",
on_end_dodge_anim: "[animation('stand'), set(stand_ticks, 3 + 1d3)]",

#------ANIMATIONS------#
animation: [
	#--NORMAL--#
	{
		id: "stand",
		body_area: "all",
		image: "beast/chroma_norm.png",
		rect: [2,2,33,28],
		solid_area: [5,8,27,25],
		attack_area: [10,5,23,32],
		frames: 1,
		duration: 3,
		accel_x: 0,
		accel_y: 100
	},
	{
		id: "walk",
		body_area: "all",
		image: "beast/chroma_norm.png",
		rect: [2,33,33,59],
		solid_area: [5,8,27,25],
		attack_area: [10,5,23,32],
		pad: 3,
		frames: 4,
		duration: 6,
		frames_per_row: 4,
		accel_x: 0,
		accel_y: 100
	},
	{
		id: "turn",
		body_area: "all",
		image: "beast/chroma_norm.png",
		rect: [2,64,33,90],
		solid_area: [5,8,27,25],
		attack_area: [10,5,23,32],
		frames: 1,
		duration: 14,
		accel_x: 0,
		accel_y: 100
	},
	
	{
		id: "pre_jump",
		body_area: "all",
		image: "beast/chroma_norm.png",
		rect: [44,2,75,28],
		solid_area: [5,8,27,25],
		attack_area: [10,5,23,32],
		frames: 1,
		duration: 14,
		accel_x: 0,
		accel_y: 100
	},
	{
		id: "jump",
		body_area: "all",
		image: "beast/chroma_norm.png",
		rect: [79,2,110,28],
		solid_area: [5,6,27,23],
		attack_area: [10,5,23,32],
		frames: 1,
		duration: 14,
		accel_x: 0,
		accel_y: 100
	},
	
	#--ATTACKS--#
	{
		id: "pre_attack1",
		body_area: "all",
		image: "beast/chroma_norm.png",
		rect: [44,2,75,28],
		solid_area: [5,8,27,25],
		pad: 3,
		frames: 2,
		duration: 13,
		accel_x: 0,
		accel_y: 100
	},
	{
		id: "pre_attack2",
		body_area: "all",
		image: "beast/chroma_norm.png",
		rect: [114,2,145,28],
		solid_area: [5,8,27,25],
		frames: 1,
		duration: 30,
		accel_x: 0,
		accel_y: 100
	},
	{
		id: "attack",
		body_area: "all",
		image: "beast/chroma_norm.png",
		rect: [149,2,230,28],
		solid_area: [5,8,27,25],
		attack_area: [24,13,80,17],
		pad: 3,
		frames: 4,
		frames_per_row: 1,
		duration: 4,
		accel_x: 0,
		accel_y: 100
	},
	{
		id: "recover",
		body_area: "all",
		image: "beast/chroma_norm.png",
		rect: [114,2,145,28],
		solid_area: [5,8,27,25],
		pad: 3,
		frames: 1,
		frames_per_row: 1,
		duration: 15,
		accel_x: 0,
		accel_y: 100
	},
	
	{
		id: "dodge",
		body_area: "all",
		image: "beast/chroma_norm.png",
		rect: [44,2,75,28],
		solid_area: [5,8,27,25],
		pad: 3,
		frames: 2,
		duration: 13,
		accel_x: 0,
		accel_y: 100
	}
],
}
