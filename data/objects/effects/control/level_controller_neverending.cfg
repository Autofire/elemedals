{
id: "level_controller_neverending",
next_animation: "'normal'",
always_active: true,
hidden_in_game: true,
is_strict: true,
zorder: "@include data/zorder.cfg:in_front_of_everything",
editor_info: {
	category: "controllers",
},
properties: {
	cosmic_shift_threshhold: "16384",
	cosmic_shift_amount: "15360",


#-------------------------- vars --------------------------#
	scroll_amount: { type: "int", default: 0 },
	scroll_xpos: { type: "int", default: 0 },
	current_segments: { type: "[int]", default: [] },
	left_edge: { type: "int", default: 0 },
	right_edge: { type: "int", default: 0 },
	last_xpos: { type: "int", default: 0 },
	segments_after: { type: "{string -> [int]}", default: {} },

#-------------------------- editor vars --------------------------#
	scroll_speed_incr: { type: "int", default: 0, editor_info: { type: "int", value: 2 } },
	scroll_speed: { type: "int", default: 0, editor_info: { type: "int", value: 2 } },
	scroll_speed_cap: { type: "int", default: 0, editor_info: { type: "int", value: 2 } },
	
	get_segment_difficulty_start: "def(int num) -> int if(segment_difficulty_start[str(num)] != null, segment_difficulty_start[str(num)], 0)",
	segment_difficulty_start: { type: "{string -> int}", default: {} },
},
on_process: "[if(level.player.x >= (last_xpos + 80),
	[add(level.player.score, (level.player.x - last_xpos)/10),
	set(last_xpos, level.player.x)]),
		     if(level.player.midpoint_x > cosmic_shift_threshhold, [cosmic_shift(-cosmic_shift_amount, 0),
	              add(scroll_xpos, -cosmic_shift_amount),
	              add(last_xpos, -cosmic_shift_amount),
				  add(left_edge, -cosmic_shift_amount), add(right_edge, -cosmic_shift_amount)],
	            [

				#if the level has gone beyond auto-scrolling, make
				 the auto-scrolling catch up#
				if(level.dimensions[0] > scroll_xpos + scroll_amount/10,
				   [set(scroll_xpos, level.dimensions[0]),
				    set(scroll_amount, 0)],
				add(scroll_amount, scroll_speed)),

	            set(level.dimensions, [max(level.dimensions[0], level.player.midpoint_x-400, scroll_xpos + scroll_amount/10), level.dimensions[1], level.dimensions[2], level.dimensions[3]]),
				if(level.player.midpoint_x < level.dimensions[0], set(level.player.midpoint_x, level.dimensions[0])),
				if(level.player.midpoint_x + 40 < level.dimensions[0], add(level.player.hitpoints, -1)),
	            if(level.player.midpoint_x > right_edge - 800,
				   if(new_segment = null,
				    fire_event('recycle_segment'),
	               [
	               add(current_segments, [new_segment]),
				   add_level_module(str(new_segment), right_edge, level.dimensions[1]),
				   add(right_edge, level.segment_width),
				   add(level.player.difficulty, 1),
				   if(scroll_speed_incr and (scroll_speed < scroll_speed_cap) and ((level.player.difficulty%scroll_speed_incr) = 0), add(scroll_speed, 1))
				   ])
				   where new_segment = choose(filter(segments_after[str(back(current_segments))], 'n', get_segment_difficulty_start(n) <= level.player.difficulty and (not (n in current_segments))))
				   ),
				 if(level.player.midpoint_x > left_edge + 800 + level.segment_width,
				   fire_event('recycle_segment'))
	            ])]",
on_recycle_segment: "[remove_level_module(str(current_segments[0])),
				    add(left_edge, level.segment_width),
					set(current_segments, filter(current_segments, 'n', n != current_segments[0]))]",
on_create: "if(level.in_editor, die(),
	            [
	            		 set(last_xpos, level.player.x),
				 set(scroll_xpos, level.dimensions[0]),
				set(level.dimensions, [level.dimensions[0], level.dimensions[1], level.dimensions[0] + 10000000, level.dimensions[3]]),
	            add_level_module(str(first_segment), level.dimensions[0], level.dimensions[1]),
				add(current_segments, [first_segment]),
	            set(left_edge, level.dimensions[0]), set(right_edge, level.dimensions[0] + level.segment_width)]
				
				 where first_segment = (level.player.x - level.dimensions[0])/level.segment_width
				)",
animation: {
	id: "normal",
	image: "effects/particles.png",
	x: 179,
	y: 135,
	w: 28,
	h: 28,

	#collide="0,0,28,28"
	frames: 1,
	duration: 1000000,
},
}