{
id: "level_controller_coin_race",
next_animation: "'normal'",
always_active: true,
hidden_in_game: true,
is_strict: true,
prototype: ["standard_values"],
properties: {
	level_selection: "[string] :: ['arcade-coin-race.cfg', 'arcade-coin-race-2.cfg', 'arcade-coin-race-3.cfg', 'arcade-coin-race-4.cfg', 'arcade-coin-race-5.cfg', 'arcade-coin-race-6.cfg', 'arcade-coin-race-7.cfg', 'arcade-coin-race-8.cfg', 'arcade-coin-race-9.cfg']",

	frogatto: "(obj frogatto_playable <- level.player)",
},
on_player_death: "[
	  if(level.player.difficulty > registry.arcade_coin_race_high_score,
	    [set(registry.arcade_coin_race_high_score, level.player.difficulty),
		 set(globals.arcade_msg, [~You made it to level ${level.player.difficulty} of the coin race.~,
		                          ~This is a new high score!~])],
		set(globals.arcade_msg, [~You made it to level ${level.player.difficulty} of the coin race.~,
		~The furthest that has been reached is level ${registry.arcade_coin_race_high_score}.~]))
	
	]",

on_create: "[
	    set(frogatto.velocity_x, 0),
	    set(frogatto.velocity_y, 0),
	    if((not frogatto.coin_race_levels) or frogatto.coin_race_levels = [level.id],
			set(frogatto.coin_race_levels, filter(level_selection, value != level.id)),
		set(frogatto.coin_race_levels, filter(frogatto.coin_race_levels, value != level.id))),
		add(frogatto.difficulty, 1),
		set(frogatto.hitpoints, frogatto.max_hitpoints),
		map(level.chars, if(value is obj coin_silver, [spawn('coin_silver', value.mid_x, value.mid_y, value.facing), remove_object(value)]))
	]",
	
on_process: "[if((level.cycle%5) = 0, if(ticks_left > 0 and find(level.chars, value is obj coin_silver) = null,
	  [teleport(choose(frogatto.coin_race_levels)),
	  fire_event(frogatto, 'check_water')],
	  if(ticks_left > 0, [title('' + (ticks_left/10) + '.' + (ticks_left%10))],
	  [schedule(100, set(frogatto.hitpoints, 0)),
	   title('Out of Time!')])) where ticks_left = if(frogatto.difficulty < 4, 440, if(frogatto.difficulty < 8, 400, 380)) - level.cycle/5)
	   ]",

on_end_anim: "animation('normal')",
zorder: "@include data/zorder.cfg:in_front_of_everything",
animation: {
	id: "normal",
	image: "effects/particles.png",
	x: 86,
	y: 73,
	w: 28,
	h: 28,
	duration: 1000,
},
}
