{
id: "pivot_properties_gun",
prototype: ["pivot_properties"],

properties: {
	///////////////////////////
	// CONSTANTS & VARIABLES //
	///////////////////////////
	c_aimDir: "string :: 'forward'",
	
	c_bulletSpawnOffset: "{ string -> {x: int, y: int} } ::
		{
			'forward': {x: 20, y: 0}
		}
	",
	
	c_bulletSpawnOffsetX: "int :: 20", // Positive is in front of player
	c_bulletSpawnOffsetY: "int :: 0",  // Positive is up from feet
	c_bulletVelocity:     "int :: 1400",

	// This is the currently equiped gun.
	gun: { type: "string", default: 'blaster' },
		

}, // End of properties

on_ctrl_gun: "[
	spawn(
		'pivot_playable.blaster_shot',
		midpoint_x + c_bulletSpawnOffsetX * facing,
		midpoint_y - c_bulletSpawnOffsetY,
		facing,
		[
			set(child.velocity_x, c_bulletVelocity*facing)
		]
	)					
]",

object_type: [
{
	id: "blaster_shot",
	prototype: ["shot"],
	
	dies_on_inactive: true,
	timer_frequency: 450,
	object_level_collisions: true,
	object_dimensions: ["enemy","boss"],
	collide_dimensions: ["enemy","boss"],
	
	properties: {
		cTEAM: "'player'",
		cATTACK_DAMAGE: "3",
		cDAMAGE_COOLDOWN: "2",
	},
	
	on_end_stand_anim: "animation('stand')",
	on_collide_side: "schedule(1, die())",	// Overloading from shot.cfg
	
	animation: [
    {
        frames_per_row: 1,

        id: "stand",
        image: "pivot/bomb/blast.png",
        rect: [2,2,14,14],
        solid_area: [4,6,8,9],
        body_area:  [4,6,8,9],
        attack_area: [2,4,10,11],
        pad: 4,
        frames: 1
    }
	]
} // End of blaster_shot

] // End of objects

} // End of file
