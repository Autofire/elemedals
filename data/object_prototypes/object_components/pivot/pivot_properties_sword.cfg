{
id: "pivot_properties_sword",
prototype: ["pivot_properties_gun"],

properties: {
	
	///////////////////////////
	// CONSTANTS & VARIABLES //
	///////////////////////////

	// This is the currently equiped sword.
	sword: { type: "string", default: 'calibur' },
	
	cSWORD_DATA: "{string ->
		{
			normal_damage: [int],
			pierce_damage: [int],
			elemental_damage: [int],
			shadow_damage: [int],
			sound_effect_dir: string,
			charged_attack: commands
		}
	} <- get_document('data/swords.json')",
	
	cIN_LAST_SWORD_ATTACK: "bool :: bool(
		sword + (cANIM_NUM + 1) not in available_animations
	)",
	
	// The way the system works is to allow the player to launch a second
	// sword attack if they press the button ANY TIME during the first one.
	cycleOfLastSwordInput: { type: "int", default: -1 },
	cycleOfSwordAnimBegin: { type: "int", default: -1 },
		
	////////////////////
	// VOID CONSTANTS //
	////////////////////
	vREQUEST_SWORD_ATTACK: "
		if(cANIM_NAME = sword and cIN_END_ANIM and not cIN_LAST_SWORD_ATTACK,
			vLAUNCH_NEXT_SWORD_ATTACK,
		   cIN_CONTROLLABLE_ANIM,
			[set(animation, NextAnimationInChain(sword, 0)),
			 set(cycleOfSwordAnimBegin, me.cycle),
			 add(major_attack_num, 1)
			]
		)
	",

	// This is called when we are mid-combo. This leads into next attack
	// and makes sure the variable for the start-of-sword animation is set.
	vLAUNCH_NEXT_SWORD_ATTACK: "[
		set(animation, NextAnimationInChain(sword, cANIM_NUM)),
		set(cycleOfSwordAnimBegin, me.cycle)
	]",

}, // End of properties

on_ctrl_sword: "[
	set(cycleOfLastSwordInput, cycle),
	vREQUEST_SWORD_ATTACK
]",

on_end_sword_anim: "[
	// If the player has given a recent enough attack input, continue the
	// chain. The idea is that button mashing WILL let you slash slightly
	// faster by skipping the first end animation frame.
if( not cIN_LAST_SWORD_ATTACK and tRECENT_SWORD_REQUEST,
	vLAUNCH_NEXT_SWORD_ATTACK,
	
	// Attempt to transition into an end animation.
	animation + 'E' in available_animations,
		animation(animation + 'E'),
		
	// If we're in a start animation, attempt to switch into the slash that
	// comes right afterward.
	cANIM_TYPE = 'Start' and
	 (cANIM_NAME + FilterNull(cANIM_NUM)) in available_animations,
		animation(cANIM_NAME + FilterNull(cANIM_NUM)),
	
	// If the player is done attacking, start standing.
	animation('stand')
	
	) where tRECENT_SWORD_REQUEST = cycleOfLastSwordInput > cycleOfSwordAnimBegin,
]",

} // End of file
