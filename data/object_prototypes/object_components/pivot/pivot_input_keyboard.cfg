{
id: "pivot_input_keyboard",

properties: {
	keyBindings: {
		type: "{string -> string|int}",
		default: {
			'sword':      's',
			'pause_menu': 'o'
		}
	},

	_keyStore: { type: "{string|int -> int|null}", default: {} },
	
	/****************************************************************************
	 *   TrackKey: takes a key (represented either by a string or an int)
	 * and keeps track exactly when it was pressed in _keyStore. If the key
	 * was being pressed on the last cycle, the cycle number is set to -1.
	 * on the frame after that, it is set to null.
	 ****************************************************************************/
	TrackKey: "def(string|int keyName) -> commands 
	[
		if(keyName in ctrl_keys,	// True if key is pressed
			if(not keyName in _keyStore,
				add(_keyStore, {(keyName): cycle})
			),
    		
		   _keyStore[keyName] > -1, // True if key was pressed last frame
		    set(_keyStore[keyName], -1),
		    
			set(_keyStore[keyName], null) // Runs if all else is false
		)
	]",
	
	/****************************************************************************
	 *   CtrlKeyboard: recieves a key tracked by TrackKey and returns its
	 * current status. Possible returns and their meanings are:
	 *
	 *	int > 0          : Duration of the current key press
	 *	int > level.cycle: The key has been just been released
	 *	null             : The key hasn't been pressed for over a cycle
	 ****************************************************************************/
	CtrlKeyboard: "def(string|int key_name) -> int|null 
		if(key_name in _keyStore,
			(cycle - (int <- _keyStore[key_name])),
			null
		)
	",
	
	/****************************************************************************
	 *   CtrlPressed: recieves a key tracked by TrackKey and returns true if it
	 * has just been pressed. Otherwise, false is returned.
	 ****************************************************************************/
	CtrlPressed: "def(string|int ctrlName) -> bool
		CtrlKeyboard(keyBindings[ctrlName]) = 1
	",
	
	/****************************************************************************
	 *   CtrlReleased: recieves a key tracked by TrackKey and returns true if it
	 * has just been released. Otherwise, false is returned.
	 ****************************************************************************/
	CtrlReleased: "def(string|int ctrlName) -> bool
		CtrlKeyboard(keyBindings[ctrlName]) > cycle
	",
	
	/****************************************************************************
	 *   CtrlReleased: recieves a key tracked by TrackKey and returns true if it
	 * has just been held for any length of time. Otherwise, false is returned.
	 ****************************************************************************/
	CtrlHeld: "def(string|int ctrlName) -> bool
		CtrlKeyboard(keyBindings[ctrlName]) != null and
		CtrlKeyboard(keyBindings[ctrlName]) > -1
	",

} // End of properties
} // End of file
