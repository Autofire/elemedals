# This prototype is for Elemedals, which builds off 
#  Frogatto's hittable prototype.
#
# This prototype handles all of the statuses, dmg
#  types, and effects that appear in the game.

# Add this line to objects calling this one.
#  fire_event('reb')

{
id: "elem_hittable",
prototype: ["hittable"],

properties: {
	energy: { type: "int", default: 80 },
	max_energy: { type: "int", default: 100 },

# ----- DAMAGE VARS ----- #
	shadow_dmg: { type: "int", default: 0 },
	
#elemental_dmg: { type: "int", default: 0 },
# Elemental is an instant effect
	
	pierce_dmg: { type: "int", default: 0 },
	old_midpoint_x: { type: "int", default: 0 },
	pierce_interval: { type: "int", default: 12 },
	
# ----- STATUS VARS ----- #
	

# ----- HEALING ----- #
	heal: "def(int heal_amount) -> commands
		if(me.hitpoints + heal_amount >= me.max_hitpoints - me.shadow_dmg,
			set(me.hitpoints, me.max_hitpoints - me.shadow_dmg),
			set(me.hitpoints, me.hitpoints + heal_amount)
		)",
},

# ----- PROCESS ----- #
on_reb: "if (me.cycle%10 = 0, [
	
	[add(me.hitpoints, - delta_x * me.pierce_dmg / me.pierce_interval), debug(hitpoints)]
		where delta_x = abs(me.midpoint_x - me.old_midpoint_x),
		
	set(me.old_midpoint_x, me.midpoint_x),
			
	if(me.shadow_dmg > 0, add(me.shadow_dmg, -1)),
	if(me.pierce_dmg > 0, add(me.pierce_dmg, -1)),
	
	if(me.energy < me.max_energy, add(me.energy, 1)),
	])",
}
